/**
 * mbaobao.com Inc.
 * Copyright (c) 2012 All Rights Reserved.
 */
package com.peigen.web.depreciate.depreciate.dal.daointerface;

// auto generated imports
import com.peigen.web.depreciate.depreciate.dal.dataobject.DepreciateProductDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>depreciate_product</tt>.
 *
 * This file is generated by <tt>depreciate-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>paygw</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/depreciate_product.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>depreciate-dalgen</tt> 
 * to generate this file.
 *
 * @author peigen
 */
 @SuppressWarnings("rawtypes") 
public interface DepreciateProductDAO {
	/**
	 *  Insert one <tt>DepreciateProductDO</tt> object to DB table <tt>depreciate_product</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into depreciate_product(id,track_category,product_name,product_serial_no,status,product_current_price,product_url,raw_add_time) values (?, ?, ?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param depreciateProduct
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String insert(DepreciateProductDO depreciateProduct) throws DataAccessException;

	/**
	 *  Query DB table <tt>depreciate_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, track_category, product_name, product_serial_no, status, product_current_price, product_url, raw_add_time, raw_update_time from depreciate_product where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return DepreciateProductDO
	 *	@throws DataAccessException
	 */	 
    public DepreciateProductDO findById(String id) throws DataAccessException;

	/**
	 *  Query DB table <tt>depreciate_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, track_category, product_name, product_serial_no, status, product_current_price, product_url, raw_add_time, raw_update_time from depreciate_product where ((track_category = ?) AND (product_serial_no = ?))</tt>
	 *
	 *	@param trackCategory
	 *	@param productSerialNo
	 *	@return DepreciateProductDO
	 *	@throws DataAccessException
	 */	 
    public DepreciateProductDO findBySerialNoAndCategory(String trackCategory, String productSerialNo) throws DataAccessException;

	/**
	 *  Query DB table <tt>depreciate_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, track_category, product_name, product_serial_no, status, product_current_price, product_url, raw_add_time, raw_update_time from depreciate_product</tt>
	 *
	 *	@param limitStart
	 *	@param pageSize
	 *	@return List<DepreciateProductDO>
	 *	@throws DataAccessException
	 */	 
    public List<DepreciateProductDO> loadAllPageList(int limitStart, int pageSize) throws DataAccessException;

	/**
	 *  Update DB table <tt>depreciate_product</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update depreciate_product set track_category=?, product_name=?, product_serial_no=?, status=?, product_current_price=?, product_url=? where (id = ?)</tt>
	 *
	 *	@param depreciateProduct
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateForId(DepreciateProductDO depreciateProduct) throws DataAccessException;

	/**
	 *  Query DB table <tt>depreciate_product</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, track_category, product_name, product_serial_no, status, product_current_price, product_url, raw_add_time, raw_update_time from depreciate_product where (id = ?) for update</tt>
	 *
	 *	@param id
	 *	@return DepreciateProductDO
	 *	@throws DataAccessException
	 */	 
    public DepreciateProductDO selectForUpdate(String id) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>depreciate_product</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from depreciate_product where ((product_serial_no = ?) AND (track_category = ?))</tt>
	 *
	 *	@param productSerialNo
	 *	@param trackCategory
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteBySerialNoForTest(String productSerialNo, String trackCategory) throws DataAccessException;

}