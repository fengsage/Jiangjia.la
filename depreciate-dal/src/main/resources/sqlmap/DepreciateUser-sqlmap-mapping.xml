<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>depreciate-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>rent</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>depreciate-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author peigen                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="depreciate">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table depreciate_user -->
    <resultMap id="RM-DEPRECIATE-USER" class="com.peigen.web.depreciate.depreciate.dal.dataobject.DepreciateUserDO">
        <result property="id" column="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userPasswd" column="user_passwd" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="rawAddTime" column="raw_add_time" javaType="java.util.Date" jdbcType="DATETIME"/>
        <result property="rawUpdateTime" column="raw_update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisDepreciateUserDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisDepreciateUserDAO.insert -->
    <insert id="MS-DEPRECIATE-USER-INSERT">
    <![CDATA[
        insert /*MS-DEPRECIATE-DEPRECIATE-USER-INSERT*/ into depreciate_user(id,user_name,user_passwd,status,user_email,raw_add_time) values (#id#, #userName#, #userPasswd#, #status#, #userEmail#, #rawAddTime#)
    ]]>
    </insert>

    <!-- mapped statement for IbatisDepreciateUserDAO.loadAll -->
    <select id="MS-DEPRECIATE-USER-LOAD-ALL" resultMap="RM-DEPRECIATE-USER">
    <![CDATA[
        select /*MS-DEPRECIATE-DEPRECIATE-USER-LOAD-ALL*/ id, user_name, user_passwd, status, user_email, raw_add_time, raw_update_time from depreciate_user
    ]]>
    </select>

    <!-- mapped statement for IbatisDepreciateUserDAO.findById -->
    <select id="MS-DEPRECIATE-USER-FIND-BY-ID" resultMap="RM-DEPRECIATE-USER">
    <![CDATA[
        select /*MS-DEPRECIATE-DEPRECIATE-USER-FIND-BY-ID*/ id, user_name, user_passwd, status, user_email, raw_add_time, raw_update_time from depreciate_user where (id = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisDepreciateUserDAO.findByUserName -->
    <select id="MS-DEPRECIATE-USER-FIND-BY-USER-NAME" resultMap="RM-DEPRECIATE-USER">
    <![CDATA[
        select /*MS-DEPRECIATE-DEPRECIATE-USER-FIND-BY-USER-NAME*/ id, user_name, user_passwd, status, user_email, raw_add_time, raw_update_time from depreciate_user where (user_name = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisDepreciateUserDAO.findByUserEmail -->
    <select id="MS-DEPRECIATE-USER-FIND-BY-USER-EMAIL" resultMap="RM-DEPRECIATE-USER">
    <![CDATA[
        select /*MS-DEPRECIATE-DEPRECIATE-USER-FIND-BY-USER-EMAIL*/ id, user_name, user_passwd, status, user_email, raw_add_time, raw_update_time from depreciate_user where (user_email = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisDepreciateUserDAO.loadAllPageList -->
    <select id="MS-DEPRECIATE-USER-LOAD-ALL-PAGE-LIST" resultMap="RM-DEPRECIATE-USER">
        select /*MS-DEPRECIATE-DEPRECIATE-USER-LOAD-ALL-PAGE-LIST*/ 
					id,
					user_name,
					user_passwd,
					status,
					user_email,
					raw_add_time,
					raw_update_time
				from depreciate_user 
				order by id desc limit #limitStart#,#pageSize#;
    </select>

    <!-- mapped statement for IbatisDepreciateUserDAO.updateForId -->
    <update id="MS-DEPRECIATE-USER-UPDATE-FOR-ID">
    <![CDATA[
        update /*MS-DEPRECIATE-DEPRECIATE-USER-UPDATE-FOR-ID*/ depreciate_user set user_passwd=#userPasswd#, status=#status#, user_email=#userEmail# where (id = #id#)
    ]]>
    </update>

    <!-- mapped statement for IbatisDepreciateUserDAO.deleteByUserNameForTest -->
    <delete id="MS-DEPRECIATE-USER-DELETE-BY-USER-NAME-FOR-TEST">
    <![CDATA[
        delete /*MS-DEPRECIATE-DEPRECIATE-USER-DELETE-BY-USER-NAME-FOR-TEST*/ from depreciate_user where (user_name = #value#)
    ]]>
    </delete>

    <!-- mapped statement for IbatisDepreciateUserDAO.deleteByUserEmailForTest -->
    <delete id="MS-DEPRECIATE-USER-DELETE-BY-USER-EMAIL-FOR-TEST">
    <![CDATA[
        delete /*MS-DEPRECIATE-DEPRECIATE-USER-DELETE-BY-USER-EMAIL-FOR-TEST*/ from depreciate_user where (user_email = #value#)
    ]]>
    </delete>

</sqlMap>
